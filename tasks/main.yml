---

- name: Install dependencies
  apt: 
    pkg:
      - gnupg
      - libicu72

- name: Make dirs
  file:
    path:
    - "/etc/apt/keyrings"
    - "/etc/apt/sources.list.d"
    state: directory

- name: Check if Jellyfin apt key already exists
  stat:
    path: "/etc/apt/keyrings/jellyfin.gpg"
  register: jellyfin_apt_key
  changed_when: false


- name: Install apt key
  include_tasks: apt_key.yml
  # when: not jellyfin_apt_key.stat.isreg

- name: Gather dpkg architecture info
  shell: "dpkg --print-architecture"
  register: dpkg_content
  changed_when: false

- name: Set system info
  set_fact:
    version_os: "{{ hostvars[inventory_hostname].ansible_distribution | lower }}"
    version_codename: "{{ hostvars[inventory_hostname].ansible_distribution_release | lower }}"
    arch: "{{ dpkg_content.stdout | lower }}"
  changed_when: false

# if ansible-core >= 2.15
#
# - name: Add Jellyfin repo
#   deb822_repository:
#     name: jellyfin
#     types: deb
#     uris: "https://repo.jellyfin.org/{{ version_os }}"
#     suites: "{{ version_codename }}"
#     components: main
#     architectures: "{{ arch }}"
#     signed_by: /etc/apt/trusted.gpg.d/jellyfin.pgp

- name: Add Jellyfin Repo
  template:
    src: "jellyfin.sources.jinja"
    dest: "/etc/apt/sources.list.d/jellyfin.sources"

- name: Install Jellyfin
  apt:
    pkg: "{{ item }}"
    update_cache: true
  loop:
    - "jellyfin"
  notify: Restart Jellyfin

- name: Make dirs
  file:
    path:
    - "{{ jellyfin_cache_dir }}"
    - "{{ jellyfin_log_dir }}"
    - "{{ jellyfin_config_dir }}"
    - "{{ jellyfin_data_dir }}"
    state: directory

- name: Configure fail2ban
  include_tasks: fail2ban.yml
  when: jellyfin_enable_fail2ban == true

- name: Configure Jellyfin
  include_tasks: config.yml
